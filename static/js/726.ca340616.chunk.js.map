{"version":3,"file":"static/js/726.ca340616.chunk.js","mappings":"0KACA,G,QAAA,CAAgB,QAAU,yBAAyB,KAAO,sBAAsB,QAAU,yBAAyB,OAAS,0B,SC2B5H,EAnBgB,SAACA,GAQb,OAAQ,+BACA,gBAAKC,UAAWC,EAAAA,QAAhB,SAAkCF,EAAMG,a,UCDpD,EAPmB,SAACH,GAChB,OAAQ,gBAAKC,UAAWC,EAAAA,KAAhB,UACJ,SAAC,KAAD,CAASE,GAAI,YAAcJ,EAAMK,GAAIC,gBAAiBJ,EAAAA,OAAtD,SAAuEF,EAAMO,U,sCCN/EC,GAAcC,EAAAA,EAAAA,GAAiB,IAyBrC,GAF4BC,EAAAA,EAAAA,GAAkC,CAACC,KAAM,wBAAzCD,EAjBgD,SAACV,GACzE,OACI,kBAAMY,SAAUZ,EAAMa,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GACXC,SAAU,CAACC,EAAAA,EAAcV,GACzBD,KAAK,iBACLY,YAAY,0BAEvB,0BACI,6CCsBhB,EA5BgB,SAACnB,GAEb,IAAMoB,EAAiBpB,EAAMqB,YAAYC,YAAYC,KAAI,SAAAC,GACrD,OAAO,SAAC,EAAD,CAAYjB,KAAMiB,EAAEjB,KAAMF,GAAImB,EAAEnB,IAASmB,EAAEnB,OAEhDoB,EAAoBzB,EAAMqB,YAAYK,aAAaH,KAAI,SAAAC,GACzD,OAAO,SAAC,EAAD,CAASrB,QAASqB,EAAErB,QAASE,GAAImB,EAAEnB,IAASmB,EAAEnB,OAMzD,OACI,iBAAKJ,UAAWC,EAAAA,QAAhB,WAEI,gBAAKD,UAAWC,EAAAA,cAAhB,SACKkB,KAGL,iBAAKnB,UAAWC,EAAAA,SAAhB,WACI,+BAAOuB,EAAP,QACA,SAAC,EAAD,CAAqBb,SAZX,SAACe,GACnB3B,EAAM4B,YAAYD,EAAOE,0B,mBCGjC,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KAPkB,SAACC,GACnB,MAAO,CACHX,YAAaW,EAAMX,eAML,CACdO,YAAaK,EAAAA,IAEjBC,EAAAA,EALJ,CAMEC","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/MessageItem/Dialogs.tsx","components/Dialogs/Dialogitem/DialogsItem.tsx","components/Dialogs/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__kispP\",\"item\":\"Dialogs_item__vNmRQ\",\"message\":\"Dialogs_message__SshaY\",\"active\":\"Dialogs_active__k03PL\"};","import React from 'react';\r\nimport styleDi from '.././Dialogs.module.css'\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n    id: string\r\n}\r\n\r\n\r\nconst Message = (props: MessagePropsType) => {\r\n\r\n    /*const newMessageElement = React.createRef<HTMLTextAreaElement>()\r\n    const sendMessagehandler =()=>{\r\n        let message = newMessageElement.current?.value\r\n        alert(message)\r\n    }\r\n*/\r\n    return (<>\r\n            <div className={styleDi.message}>{props.message}\r\n\r\n            </div>\r\n            {/*   <textarea ref={newMessageElement}>  </textarea>\r\n             <button onClick={sendMessagehandler}>send message</button>*/}\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport styleDi from '.././Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype DialogItemPropsType = {\r\n    name: string\r\n    id: string\r\n}\r\n\r\n\r\nconst DialogItem = (props: DialogItemPropsType) => {\r\n    return (<div className={styleDi.item}>\r\n        <NavLink to={\"/dialogs/\" + props.id} activeClassName={styleDi.active}>{props.name}</NavLink>\r\n    </div>)\r\n}\r\n\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport TextArea from \"../common/FormControls/FormsControl\";\r\nimport {maxlengthCreator, requiredField} from \"../../utils/validator/validators\";\r\n\r\n\r\nconst maxLength30 = maxlengthCreator(30)\r\nexport type FormDataAddMessageType = {\r\n    newMessageBody: string\r\n}\r\n\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<FormDataAddMessageType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={TextArea}\r\n                       validate={[requiredField,maxLength30,]}\r\n                       name='newMessageBody'\r\n                       placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>SEND</button>\r\n\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nconst AddMessageReduxForm = reduxForm<FormDataAddMessageType>({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default AddMessageReduxForm;","import React from 'react';\r\nimport styleDi from './Dialogs.module.css'\r\nimport Message from \"./MessageItem/Dialogs\";\r\nimport {DialogsPageType} from \"../../Redux/Types\";\r\n\r\nimport DialogItem from \"./Dialogitem/DialogsItem\";\r\nimport AddMessageReduxForm, {FormDataAddMessageType} from \"./AddMessageForm\";\r\n\r\n\r\ntype DialogsPropsType = {\r\n    dialogsPage: DialogsPageType\r\n    sendMessage: (messageBody: string) => void\r\n    //isAuth: boolean\r\n}\r\n\r\n\r\nconst Dialogs = (props: DialogsPropsType) => {\r\n\r\n    const mapDialogsItem = props.dialogsPage.dialogsData.map(e => {\r\n        return <DialogItem name={e.name} id={e.id} key={e.id}/>\r\n    })\r\n    const mapMessageElement = props.dialogsPage.messagesData.map(e => {\r\n        return <Message message={e.message} id={e.id} key={e.id}/>\r\n    })\r\n\r\n    const addNewMessage = (values: FormDataAddMessageType) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n    return (\r\n        <div className={styleDi.dialogs}>\r\n\r\n            <div className={styleDi.dialogs_items}>\r\n                {mapDialogsItem}\r\n            </div>\r\n\r\n            <div className={styleDi.messages}>\r\n                <div> {mapMessageElement} </div>\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n        ;\r\n};\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {\r\n    InitialStateDialogsType,\r\n    sendMessageActionCreator,\r\n} from \"../../Redux/dialogs-reducer\";\r\n\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../Redux/Redux-store\";\r\nimport {WithAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\ntype mapStateToPropsType = {\r\n    dialogsPage: InitialStateDialogsType\r\n\r\n}\r\n\r\ntype mapDispatchToPropsType = {\r\n\r\n    sendMessage: (messageBody:string) => void\r\n}\r\n\r\nlet mapStateToProps = (state: AppRootStateType): mapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect<mapStateToPropsType, mapDispatchToPropsType, {}, AppRootStateType>\r\n    (mapStateToProps, {\r\n        sendMessage: sendMessageActionCreator\r\n    }),\r\n    WithAuthRedirect\r\n)(Dialogs);"],"names":["props","className","styleDi","message","to","id","activeClassName","name","maxLength30","maxlengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","validate","requiredField","placeholder","mapDialogsItem","dialogsPage","dialogsData","map","e","mapMessageElement","messagesData","values","sendMessage","newMessageBody","compose","connect","state","sendMessageActionCreator","WithAuthRedirect","Dialogs"],"sourceRoot":""}